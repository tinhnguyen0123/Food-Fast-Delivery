import RestaurantService from "../services/restaurant.services.js";

class RestaurantController {
  // ğŸŸ¢ Táº¡o nhÃ  hÃ ng má»›i (cÃ³ upload áº£nh)
  async create(req, res) {
    try {
      const restaurant = await RestaurantService.createRestaurant(req.body, req.file);
      res.status(201).json({
        message: "Táº¡o nhÃ  hÃ ng thÃ nh cÃ´ng",
        data: restaurant,
      });
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  }

  // ğŸŸ¢ Láº¥y nhÃ  hÃ ng theo ID
  async getById(req, res) {
    try {
      const restaurant = await RestaurantService.getRestaurantById(req.params.id);
      res.status(200).json(restaurant);
    } catch (error) {
      res.status(404).json({ message: error.message });
    }
  }

  // ğŸŸ¢ Láº¥y táº¥t cáº£ nhÃ  hÃ ng
  async getAll(req, res) {
    try {
      const restaurants = await RestaurantService.getAllRestaurants();
      res.status(200).json(restaurants);
    } catch (error) {
      res.status(500).json({ message: "Lá»—i server", error: error.message });
    }
  }

  // ğŸŸ¢ Láº¥y nhÃ  hÃ ng theo chá»§ sá»Ÿ há»¯u
  async getByOwner(req, res) {
    try {
      const ownerId = req.params.ownerId;
      const restaurants = await RestaurantService.getRestaurantsByOwner(ownerId);
      res.status(200).json(restaurants);
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  }

  // ğŸŸ¢ Cáº­p nháº­t nhÃ  hÃ ng (cÃ³ thá»ƒ cáº­p nháº­t áº£nh)
  async update(req, res) {
    try {
      const updated = await RestaurantService.updateRestaurant(req.params.id, req.body, req.file);
      res.status(200).json({
        message: "Cáº­p nháº­t nhÃ  hÃ ng thÃ nh cÃ´ng",
        data: updated,
      });
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  }

  // ğŸŸ¢ XÃ³a nhÃ  hÃ ng
  async delete(req, res) {
    try {
      const deleted = await RestaurantService.deleteRestaurant(req.params.id);
      res.status(200).json({
        message: "XÃ³a nhÃ  hÃ ng thÃ nh cÃ´ng",
        data: deleted,
      });
    } catch (error) {
      res.status(400).json({ message: error.message });
    }
  }
}

export default new RestaurantController();
